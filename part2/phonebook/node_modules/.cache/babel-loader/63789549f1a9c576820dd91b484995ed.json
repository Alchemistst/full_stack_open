{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part2\\\\phonebook\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part2\\\\phonebook\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nconst App = () => {\n  //STATE:\n  const _useState = useState([{\n    name: 'Arto Hellas'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1]; //HELPER FUNCTIONS:\n  //handleTyping updates the state of newName as the user types\n\n\n  const handleTyping = event => {\n    setNewName(event.target.value);\n  }; //handleSend updates the state of person so the newName typed is added\n\n\n  const handleSend = event => {\n    event.preventDefault();\n    if (newName.length === 0) return;\n    const personObject = {\n      name: newName\n    };\n    setPersons(persons.concat(personObject));\n    setNewName('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"name: \", React.createElement(\"input\", {\n    value: newName,\n    onChange: handleTyping,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleSend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"add\"))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Numbers\"), console.log(persons));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part2/phonebook/src/App.js"],"names":["React","useState","App","name","persons","setPersons","newName","setNewName","handleTyping","event","target","value","handleSend","preventDefault","length","personObject","concat","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd;AADc,oBAEiBD,QAAQ,CAAC,CACtC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GADsC,CAAD,CAFzB;AAAA;AAAA,QAENC,OAFM;AAAA,QAEGC,UAFH;;AAAA,qBAKkBJ,QAAQ,CAAC,EAAD,CAL1B;AAAA;AAAA,QAKNK,OALM;AAAA,QAKGC,UALH,kBAOd;AACA;;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACH,GAFD,CATc,CAYd;;;AACA,QAAMC,UAAU,GAAIH,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACI,cAAN;AAEA,QAAIP,OAAO,CAACQ,MAAR,KAAmB,CAAvB,EAA0B;AAC1B,UAAMC,YAAY,GAAG;AACjBZ,MAAAA,IAAI,EAAEG;AADW,KAArB;AAIAD,IAAAA,UAAU,CAACD,OAAO,CAACY,MAAR,CAAeD,YAAf,CAAD,CAAV;AACAR,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAVD;;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQ;AAAO,IAAA,KAAK,EAAED,OAAd;AAAuB,IAAA,QAAQ,EAAEE,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEI,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAJF,CAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,EAWGK,OAAO,CAACC,GAAR,CAAYd,OAAZ,CAXH,CADF;AAeD,CAxCH;;AA0CE,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n    //STATE:\r\n    const [ persons, setPersons] = useState([\r\n      { name: 'Arto Hellas' }\r\n    ]) \r\n    const [ newName, setNewName ] = useState('')\r\n    \r\n    //HELPER FUNCTIONS:\r\n    //handleTyping updates the state of newName as the user types\r\n    const handleTyping = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n    //handleSend updates the state of person so the newName typed is added\r\n    const handleSend = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (newName.length === 0) return\r\n        const personObject = {\r\n            name: newName\r\n        }\r\n\r\n        setPersons(persons.concat(personObject))\r\n        setNewName('')\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h2>Phonebook</h2>\r\n        <form>\r\n          <div>\r\n            name: <input value={newName} onChange={handleTyping}/>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" onClick={handleSend}>add</button>\r\n          </div>\r\n        </form>\r\n        <h2>Numbers</h2>\r\n        {console.log(persons)}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default App"]},"metadata":{},"sourceType":"module"}