{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part2\\\\phonebook\\\\src\\\\components\\\\NewName.js\";\nimport React from 'react';\nimport contactsService from '../services/contacts';\nimport handleTyping from '../helpers/handleTyping'; //NewName components provides functionality for creating new contacts.\n\nconst NewName = ({\n  persons,\n  setPersons,\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber\n}) => {\n  //handleSend updates the state of person so the newName typed is added\n  const handleSend = event => {\n    event.preventDefault(); //Prevents contacts for being stored empty\n\n    if (newName.length * newNumber.length === 0) {\n      window.alert(\"Missing fields.\");\n      return;\n    } //Set new person\n\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }; //Prevents storing contact that already exist\n\n    const match = persons.find(person => person.name === newName);\n\n    if (match) {\n      if (window.confirm(\"\".concat(newName, \" is already added to phonebook. Replace old number?\"))) {\n        //TODO=> Send PUT\n        contactsService.updateNumber(match.id, personObject).then(updatedPerson => {\n          //Updated person is added to the state\n          const updatedPersons = [...persons];\n          updatedPersons[persons.indexOf(match)] = updatedPerson;\n          setPersons(updatedPersons); //Restore defaults for fields\n\n          setNewName('');\n          setNewNumber('');\n        });\n      }\n\n      return;\n    } //Send new person to server\n\n\n    contactsService.newContact(personObject).then(newPerson => {\n      //New person is added to the state\n      setPersons(persons.concat(newPerson)); //Restore defaults for fields\n\n      setNewName('');\n      setNewNumber('');\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Add new\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Name: \", React.createElement(\"input\", {\n    value: newName,\n    onChange: e => handleTyping(setNewName, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Number: \", React.createElement(\"input\", {\n    value: newNumber,\n    onChange: e => handleTyping(setNewNumber, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleSend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"add\"))));\n};\n\nexport default NewName;","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part2/phonebook/src/components/NewName.js"],"names":["React","contactsService","handleTyping","NewName","persons","setPersons","newName","setNewName","newNumber","setNewNumber","handleSend","event","preventDefault","length","window","alert","personObject","name","number","match","find","person","confirm","updateNumber","id","then","updatedPerson","updatedPersons","indexOf","newContact","newPerson","concat","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,YAAP,MAAyB,yBAAzB,C,CAGA;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,UAAV;AAAsBC,EAAAA,OAAtB;AAA8BC,EAAAA,UAA9B;AAAyCC,EAAAA,SAAzC;AAAmDC,EAAAA;AAAnD,CAAD,KAAqE;AACjF;AACA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN,GAD4B,CAG5B;;AACA,QAAIN,OAAO,CAACO,MAAR,GAAiBL,SAAS,CAACK,MAA3B,KAAsC,CAA1C,EAA6C;AAC3CC,MAAAA,MAAM,CAACC,KAAP,CAAa,iBAAb;AACA;AACD,KAP2B,CAS5B;;;AACA,UAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAEX,OADa;AAEnBY,MAAAA,MAAM,EAAEV;AAFW,KAArB,CAV4B,CAgB5B;;AACA,UAAMW,KAAK,GAAGf,OAAO,CAACgB,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACJ,IAAP,KAAgBX,OAAvC,CAAd;;AACA,QAAIa,KAAJ,EAAU;AACN,UAAGL,MAAM,CAACQ,OAAP,WAAkBhB,OAAlB,yDAAH,EAAmF;AACjF;AACAL,QAAAA,eAAe,CACdsB,YADD,CACcJ,KAAK,CAACK,EADpB,EACwBR,YADxB,EAECS,IAFD,CAEMC,aAAa,IAAG;AACpB;AACA,gBAAMC,cAAc,GAAG,CAAC,GAAGvB,OAAJ,CAAvB;AACAuB,UAAAA,cAAc,CAACvB,OAAO,CAACwB,OAAR,CAAgBT,KAAhB,CAAD,CAAd,GAAyCO,aAAzC;AACArB,UAAAA,UAAU,CAACsB,cAAD,CAAV,CAJoB,CAMpB;;AACApB,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,SAXD;AAYD;;AACD;AACH,KAnC2B,CAsC5B;;;AACAR,IAAAA,eAAe,CACZ4B,UADH,CACcb,YADd,EAEGS,IAFH,CAEQK,SAAS,IAAG;AAChB;AACAzB,MAAAA,UAAU,CAACD,OAAO,CAAC2B,MAAR,CAAeD,SAAf,CAAD,CAAV,CAFgB,CAIhB;;AACAvB,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KATH;AAWH,GAlDC;;AAoDF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQ;AAAO,IAAA,KAAK,EAAEH,OAAd;AAAuB,IAAA,QAAQ,EAAG0B,CAAD,IAAO9B,YAAY,CAACK,UAAD,EAAayB,CAAb,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADN,EAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACU;AAAO,IAAA,KAAK,EAAExB,SAAd;AAAyB,IAAA,QAAQ,EAAGwB,CAAD,IAAO9B,YAAY,CAACO,YAAD,EAAeuB,CAAf,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,CAJN,EAOM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEtB,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAPN,CAFF,CADF;AAgBD,CAtED;;AAwEA,eAAeP,OAAf","sourcesContent":["import React from 'react'\r\nimport contactsService from '../services/contacts'\r\nimport handleTyping from '../helpers/handleTyping'\r\n\r\n\r\n//NewName components provides functionality for creating new contacts.\r\n\r\nconst NewName = ({persons, setPersons, newName,setNewName,newNumber,setNewNumber}) =>{\r\n    //handleSend updates the state of person so the newName typed is added\r\n    const handleSend = (event) => {\r\n      event.preventDefault()\r\n\r\n      //Prevents contacts for being stored empty\r\n      if (newName.length * newNumber.length === 0) {\r\n        window.alert(\"Missing fields.\")  \r\n        return\r\n      }\r\n\r\n      //Set new person\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n\r\n      //Prevents storing contact that already exist\r\n      const match = persons.find(person => person.name === newName)\r\n      if (match){\r\n          if(window.confirm(`${newName} is already added to phonebook. Replace old number?`)){\r\n            //TODO=> Send PUT\r\n            contactsService\r\n            .updateNumber(match.id, personObject)\r\n            .then(updatedPerson =>{\r\n              //Updated person is added to the state\r\n              const updatedPersons = [...persons]\r\n              updatedPersons[persons.indexOf(match)] = updatedPerson\r\n              setPersons(updatedPersons)\r\n    \r\n              //Restore defaults for fields\r\n              setNewName('')\r\n              setNewNumber('')\r\n            })\r\n          }\r\n          return\r\n      }\r\n\r\n     \r\n      //Send new person to server\r\n      contactsService\r\n        .newContact(personObject)\r\n        .then(newPerson =>{\r\n          //New person is added to the state\r\n          setPersons(persons.concat(newPerson))\r\n\r\n          //Restore defaults for fields\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n      \r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h2>Add new</h2>\r\n      <form>\r\n            <div>\r\n              Name: <input value={newName} onChange={(e) => handleTyping(setNewName, e)}/>\r\n            </div>\r\n            <div>\r\n              Number: <input value={newNumber} onChange={(e) => handleTyping(setNewNumber, e)}/>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" onClick={handleSend}>add</button>\r\n            </div>\r\n          </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewName"]},"metadata":{},"sourceType":"module"}