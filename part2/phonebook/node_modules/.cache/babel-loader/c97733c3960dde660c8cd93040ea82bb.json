{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part2\\\\phonebook\\\\src\\\\components\\\\NewName.js\";\nimport React from 'react';\nimport handleTyping from '../helpers/handleTyping'; //NewName components provides creating new contacts functionality.\n\nconst NewName = ({\n  persons,\n  setPersons,\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber\n}) => {\n  //handleSend updates the state of person so the newName typed is added\n  const handleSend = event => {\n    event.preventDefault(); //Prevents contacts for being stored empty\n\n    if (newName.length * newNumber.length === 0) return; //Prevents storing contact that already exist\n\n    if (persons.find(person => person.name === newName)) {\n      window.alert(\"\".concat(newName, \" is already added to phonebook\"));\n      return;\n    } //Set new person\n\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n    setPersons(persons.concat(personObject)); //Restore defaults for fields\n\n    setNewName('');\n    setNewNumber('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Add new\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Name: \", React.createElement(\"input\", {\n    value: newName,\n    onChange: e => handleTyping(setNewName, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Number: \", React.createElement(\"input\", {\n    value: newNumber,\n    onChange: e => handleTyping(setNewNumber, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleSend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"add\"))));\n};\n\nexport default NewName;","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part2/phonebook/src/components/NewName.js"],"names":["React","handleTyping","NewName","persons","setPersons","newName","setNewName","newNumber","setNewNumber","handleSend","event","preventDefault","length","find","person","name","window","alert","personObject","number","concat","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB,C,CAGA;;AACA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,UAAV;AAAsBC,EAAAA,OAAtB;AAA8BC,EAAAA,UAA9B;AAAyCC,EAAAA,SAAzC;AAAmDC,EAAAA;AAAnD,CAAD,KAAqE;AACjF;AACA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN,GAD4B,CAG5B;;AACA,QAAIN,OAAO,CAACO,MAAR,GAAiBL,SAAS,CAACK,MAA3B,KAAsC,CAA1C,EAA6C,OAJjB,CAM5B;;AACA,QAAIT,OAAO,CAACU,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgBV,OAAvC,CAAJ,EAAoD;AAChDW,MAAAA,MAAM,CAACC,KAAP,WAAgBZ,OAAhB;AACA;AACH,KAV2B,CAY5B;;;AACA,UAAMa,YAAY,GAAG;AACjBH,MAAAA,IAAI,EAAEV,OADW;AAEjBc,MAAAA,MAAM,EAAEZ;AAFS,KAArB;AAIAH,IAAAA,UAAU,CAACD,OAAO,CAACiB,MAAR,CAAeF,YAAf,CAAD,CAAV,CAjB4B,CAmB5B;;AACAZ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAtBC;;AAwBF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQ;AAAO,IAAA,KAAK,EAAEH,OAAd;AAAuB,IAAA,QAAQ,EAAGgB,CAAD,IAAOpB,YAAY,CAACK,UAAD,EAAae,CAAb,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADN,EAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACU;AAAO,IAAA,KAAK,EAAEd,SAAd;AAAyB,IAAA,QAAQ,EAAGc,CAAD,IAAOpB,YAAY,CAACO,YAAD,EAAea,CAAf,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,CAJN,EAOM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEZ,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAPN,CAFF,CADF;AAgBD,CA1CD;;AA4CA,eAAeP,OAAf","sourcesContent":["import React from 'react';\r\nimport handleTyping from '../helpers/handleTyping'\r\n\r\n\r\n//NewName components provides creating new contacts functionality.\r\nconst NewName = ({persons, setPersons, newName,setNewName,newNumber,setNewNumber}) =>{\r\n    //handleSend updates the state of person so the newName typed is added\r\n    const handleSend = (event) => {\r\n      event.preventDefault()\r\n\r\n      //Prevents contacts for being stored empty\r\n      if (newName.length * newNumber.length === 0) return\r\n\r\n      //Prevents storing contact that already exist\r\n      if (persons.find(person => person.name === newName)){\r\n          window.alert(`${newName} is already added to phonebook`)\r\n          return\r\n      }\r\n\r\n      //Set new person\r\n      const personObject = {\r\n          name: newName,\r\n          number: newNumber\r\n      }\r\n      setPersons(persons.concat(personObject))\r\n\r\n      //Restore defaults for fields\r\n      setNewName('')\r\n      setNewNumber('')\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h2>Add new</h2>\r\n      <form>\r\n            <div>\r\n              Name: <input value={newName} onChange={(e) => handleTyping(setNewName, e)}/>\r\n            </div>\r\n            <div>\r\n              Number: <input value={newNumber} onChange={(e) => handleTyping(setNewNumber, e)}/>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" onClick={handleSend}>add</button>\r\n            </div>\r\n          </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewName"]},"metadata":{},"sourceType":"module"}