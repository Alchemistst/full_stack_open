{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part2\\\\phonebook\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part2\\\\phonebook\\\\src\\\\App.js\";\nimport React, { useState } from 'react'; //COMPONENTS\n\nconst Person = ({\n  name,\n  number\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, \" \", name, \" \", number);\n\nconst Search = ({\n  newSearch,\n  setNewSearch\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Search: \", React.createElement(\"input\", {\n    value: newSearch,\n    onChange: e => handleTyping(setNewSearch, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nconst NewName = ({\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber,\n  handleSend\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Add new\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"name: \", React.createElement(\"input\", {\n    value: newName,\n    onChange: e => handleTyping(setNewName, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"number: \", React.createElement(\"input\", {\n    value: newNumber,\n    onChange: e => handleTyping(setNewNumber, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleSend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"add\"))));\n};\n\nconst DisplayContacts = ({\n  persons,\n  newSearch\n}) => {\n  const renderNumbers = () => {\n    if (newSearch === '') {\n      return persons.map(person => React.createElement(Person, {\n        key: person.name,\n        name: person.name,\n        number: person.number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    } else {\n      let re = new RegExp(newSearch, 'i');\n      let personsFiltered = persons.filter(person => re.test(person.name));\n      return personsFiltered.map(person => React.createElement(Person, {\n        key: person.name,\n        name: person.name,\n        number: person.number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Contacts\"), renderNumbers());\n};\n\nconst handleTyping = (setNew, e) => {\n  setNew(e.target.value);\n};\n\nconst App = () => {\n  //STATE:\n  const _useState = useState([{\n    name: 'Arto Hellas',\n    number: '040-1234567'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNewNumber = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        newSearch = _useState8[0],\n        setNewSearch = _useState8[1]; //HELPER FUNCTIONS:\n  //handleTyping updates the state of the variable assigned to the field as the user types\n\n  /*const handleTyping = (setNew,e) => {\r\n    setNew(e.target.value)\r\n  }*/\n  //handleSend updates the state of person so the newName typed is added\n\n\n  const handleSend = event => {\n    event.preventDefault(); //Prevents contacts for being stored empty\n\n    if (newName.length * newNumber.length === 0) return; //Prevents storing contact that already exist\n\n    if (persons.find(person => person.name === newName)) {\n      window.alert(\"\".concat(newName, \" is already added to phonebook\"));\n      return;\n    } //Set new person\n\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n    setPersons(persons.concat(personObject)); //Restore defaults for fields\n\n    setNewName('');\n    setNewNumber('');\n  }; //renderNumbers renders all numbers if search field is empty. Renders matches if search field is being used.\n\n\n  const renderNumbers = () => {\n    if (newSearch === '') {\n      return persons.map(person => React.createElement(Person, {\n        key: person.name,\n        name: person.name,\n        number: person.number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    } else {\n      let re = new RegExp(newSearch, 'i');\n      let personsFiltered = persons.filter(person => re.test(person.name));\n      return personsFiltered.map(person => React.createElement(Person, {\n        key: person.name,\n        name: person.name,\n        number: person.number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(Search, {\n    newSearch: newSearch,\n    setNewSearch: setNewSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(NewName, {\n    newName: newName,\n    setNewName: setNewName,\n    newNumber: newNumber,\n    setNewNumber: setNewNumber,\n    handleSend: handleSend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(DisplayContacts, {\n    persons: persons,\n    newSearch: newSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part2/phonebook/src/App.js"],"names":["React","useState","Person","name","number","Search","newSearch","setNewSearch","e","handleTyping","NewName","newName","setNewName","newNumber","setNewNumber","handleSend","DisplayContacts","persons","renderNumbers","map","person","re","RegExp","personsFiltered","filter","test","setNew","target","value","App","setPersons","event","preventDefault","length","find","window","alert","personObject","concat"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAOD,IAAP,OAAcC,MAAd,CAAnC;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAaC,EAAAA;AAAb,CAAD,KAA+B;AAC5C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACU;AAAO,IAAA,KAAK,EAAED,SAAd;AAAyB,IAAA,QAAQ,EAAGE,CAAD,IAAOC,YAAY,CAACF,YAAD,EAAeC,CAAf,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,CADF;AAKD,CAND;;AAQA,MAAME,OAAO,GAAG,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA,UAAT;AAAoBC,EAAAA,SAApB;AAA8BC,EAAAA,YAA9B;AAA2CC,EAAAA;AAA3C,CAAD,KAA2D;AACzE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQ;AAAO,IAAA,KAAK,EAAEJ,OAAd;AAAuB,IAAA,QAAQ,EAAGH,CAAD,IAAOC,YAAY,CAACG,UAAD,EAAaJ,CAAb,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADN,EAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACU;AAAO,IAAA,KAAK,EAAEK,SAAd;AAAyB,IAAA,QAAQ,EAAGL,CAAD,IAAOC,YAAY,CAACK,YAAD,EAAeN,CAAf,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,CAJN,EAOM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEO,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAPN,CAFF,CADF;AAgBD,CAjBD;;AAmBA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUX,EAAAA;AAAV,CAAD,KAA0B;AAEhD,QAAMY,aAAa,GAAG,MAAK;AAEzB,QAAIZ,SAAS,KAAK,EAAlB,EAAqB;AACnB,aAAOW,OAAO,CAACE,GAAR,CAAaC,MAAD,IAAU,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACjB,IAApB;AAA0B,QAAA,IAAI,EAAEiB,MAAM,CAACjB,IAAvC;AAA6C,QAAA,MAAM,EAAEiB,MAAM,CAAChB,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,CAAP;AACD,KAFD,MAEK;AACH,UAAIiB,EAAE,GAAG,IAAIC,MAAJ,CAAWhB,SAAX,EAAsB,GAAtB,CAAT;AACA,UAAIiB,eAAe,GAAGN,OAAO,CAACO,MAAR,CAAgBJ,MAAD,IAAWC,EAAE,CAACI,IAAH,CAAQL,MAAM,CAACjB,IAAf,CAA1B,CAAtB;AACA,aAAOoB,eAAe,CAACJ,GAAhB,CAAqBC,MAAD,IAAU,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACjB,IAApB;AAA0B,QAAA,IAAI,EAAEiB,MAAM,CAACjB,IAAvC;AAA6C,QAAA,MAAM,EAAEiB,MAAM,CAAChB,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9B,CAAP;AACD;AACF,GATD;;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGc,aAAa,EAFhB,CADF;AAMD,CAnBD;;AAqBA,MAAMT,YAAY,GAAG,CAACiB,MAAD,EAAQlB,CAAR,KAAc;AACjCkB,EAAAA,MAAM,CAAClB,CAAC,CAACmB,MAAF,CAASC,KAAV,CAAN;AACD,CAFD;;AAIA,MAAMC,GAAG,GAAG,MAAM;AACd;AADc,oBAEiB5B,QAAQ,CAAC,CACtC;AAAEE,IAAAA,IAAI,EAAE,aAAR;AAAsBC,IAAAA,MAAM,EAAE;AAA9B,GADsC,EAEtC;AAAED,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GAFsC,EAGtC;AAAED,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,MAAM,EAAE;AAA/B,GAHsC,EAItC;AAAED,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,MAAM,EAAE;AAApC,GAJsC,CAAD,CAFzB;AAAA;AAAA,QAENa,OAFM;AAAA,QAEGa,UAFH;;AAAA,qBAQkB7B,QAAQ,CAAC,EAAD,CAR1B;AAAA;AAAA,QAQNU,OARM;AAAA,QAQGC,UARH;;AAAA,qBASqBX,QAAQ,CAAC,EAAD,CAT7B;AAAA;AAAA,QASNY,SATM;AAAA,QASKC,YATL;;AAAA,qBAUqBb,QAAQ,CAAC,EAAD,CAV7B;AAAA;AAAA,QAUNK,SAVM;AAAA,QAUKC,YAVL,kBAYd;AAEA;;AACA;;;AAIA;;;AACA,QAAMQ,UAAU,GAAIgB,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACC,cAAN,GAD0B,CAG1B;;AACA,QAAIrB,OAAO,CAACsB,MAAR,GAAiBpB,SAAS,CAACoB,MAA3B,KAAsC,CAA1C,EAA6C,OAJnB,CAM1B;;AACA,QAAIhB,OAAO,CAACiB,IAAR,CAAad,MAAM,IAAIA,MAAM,CAACjB,IAAP,KAAgBQ,OAAvC,CAAJ,EAAoD;AAChDwB,MAAAA,MAAM,CAACC,KAAP,WAAgBzB,OAAhB;AACA;AACH,KAVyB,CAY1B;;;AACA,UAAM0B,YAAY,GAAG;AACjBlC,MAAAA,IAAI,EAAEQ,OADW;AAEjBP,MAAAA,MAAM,EAAES;AAFS,KAArB;AAIAiB,IAAAA,UAAU,CAACb,OAAO,CAACqB,MAAR,CAAeD,YAAf,CAAD,CAAV,CAjB0B,CAmB1B;;AACAzB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAtBD,CApBc,CA4Cd;;;AACA,QAAMI,aAAa,GAAG,MAAK;AAEzB,QAAIZ,SAAS,KAAK,EAAlB,EAAqB;AACnB,aAAOW,OAAO,CAACE,GAAR,CAAaC,MAAD,IAAU,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACjB,IAApB;AAA0B,QAAA,IAAI,EAAEiB,MAAM,CAACjB,IAAvC;AAA6C,QAAA,MAAM,EAAEiB,MAAM,CAAChB,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,CAAP;AACD,KAFD,MAEK;AACH,UAAIiB,EAAE,GAAG,IAAIC,MAAJ,CAAWhB,SAAX,EAAsB,GAAtB,CAAT;AACA,UAAIiB,eAAe,GAAGN,OAAO,CAACO,MAAR,CAAgBJ,MAAD,IAAWC,EAAE,CAACI,IAAH,CAAQL,MAAM,CAACjB,IAAf,CAA1B,CAAtB;AACA,aAAOoB,eAAe,CAACJ,GAAhB,CAAqBC,MAAD,IAAU,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACjB,IAApB;AAA0B,QAAA,IAAI,EAAEiB,MAAM,CAACjB,IAAvC;AAA6C,QAAA,MAAM,EAAEiB,MAAM,CAAChB,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9B,CAAP;AACD;AACF,GATD;;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAGE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEE,SADb;AAEE,IAAA,YAAY,EAAEC,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAQE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAII,OADb;AAEE,IAAA,UAAU,EAAIC,UAFhB;AAGE,IAAA,SAAS,EAAIC,SAHf;AAIE,IAAA,YAAY,EAAIC,YAJlB;AAKE,IAAA,UAAU,EAAIC,UALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAgBE,oBAAC,eAAD;AACE,IAAA,OAAO,EAAGE,OADZ;AAEE,IAAA,SAAS,EAAGX,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAuBD,CA/EH;;AAiFE,eAAeuB,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n//COMPONENTS\r\nconst Person = ({name, number}) => <div> {name} {number}</div>\r\n\r\nconst Search = ({newSearch,  setNewSearch}) =>{\r\n  return(\r\n    <div>\r\n      Search: <input value={newSearch} onChange={(e) => handleTyping(setNewSearch, e)}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst NewName = ({newName,setNewName,newNumber,setNewNumber,handleSend}) =>{\r\n  return(\r\n    <div>\r\n      <h2>Add new</h2>\r\n      <form>\r\n            <div>\r\n              name: <input value={newName} onChange={(e) => handleTyping(setNewName, e)}/>\r\n            </div>\r\n            <div>\r\n              number: <input value={newNumber} onChange={(e) => handleTyping(setNewNumber, e)}/>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" onClick={handleSend}>add</button>\r\n            </div>\r\n          </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DisplayContacts = ({persons, newSearch}) => {\r\n  \r\n  const renderNumbers = ()=> {\r\n      \r\n    if (newSearch === ''){\r\n      return persons.map((person)=><Person key={person.name} name={person.name} number={person.number}/>)\r\n    }else{\r\n      let re = new RegExp(newSearch, 'i')\r\n      let personsFiltered = persons.filter((person)=> re.test(person.name))\r\n      return personsFiltered.map((person)=><Person key={person.name} name={person.name} number={person.number}/>)\r\n    }\r\n  }\r\n \r\n  return(\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      {renderNumbers()}\r\n    </div>\r\n    )   \r\n}\r\n\r\nconst handleTyping = (setNew,e) => {\r\n  setNew(e.target.value)\r\n}\r\n\r\nconst App = () => {\r\n    //STATE:\r\n    const [ persons, setPersons] = useState([\r\n      { name: 'Arto Hellas',number: '040-1234567'},\r\n      { name: 'Ada Lovelace', number: '39-44-5323523' },\r\n      { name: 'Dan Abramov', number: '12-43-234345' },\r\n      { name: 'Mary Poppendieck', number: '39-23-6423122'}\r\n    ]) \r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber] = useState('')\r\n    const [ newSearch, setNewSearch] = useState('')\r\n    \r\n    //HELPER FUNCTIONS:\r\n\r\n    //handleTyping updates the state of the variable assigned to the field as the user types\r\n    /*const handleTyping = (setNew,e) => {\r\n      setNew(e.target.value)\r\n    }*/\r\n\r\n    //handleSend updates the state of person so the newName typed is added\r\n    const handleSend = (event) => {\r\n        event.preventDefault()\r\n\r\n        //Prevents contacts for being stored empty\r\n        if (newName.length * newNumber.length === 0) return\r\n\r\n        //Prevents storing contact that already exist\r\n        if (persons.find(person => person.name === newName)){\r\n            window.alert(`${newName} is already added to phonebook`)\r\n            return\r\n        }\r\n\r\n        //Set new person\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        setPersons(persons.concat(personObject))\r\n\r\n        //Restore defaults for fields\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n    //renderNumbers renders all numbers if search field is empty. Renders matches if search field is being used.\r\n    const renderNumbers = ()=> {\r\n      \r\n      if (newSearch === ''){\r\n        return persons.map((person)=><Person key={person.name} name={person.name} number={person.number}/>)\r\n      }else{\r\n        let re = new RegExp(newSearch, 'i')\r\n        let personsFiltered = persons.filter((person)=> re.test(person.name))\r\n        return personsFiltered.map((person)=><Person key={person.name} name={person.name} number={person.number}/>)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h2>Phonebook</h2>\r\n\r\n        <Search \r\n          newSearch={newSearch} \r\n          setNewSearch={setNewSearch}\r\n        />\r\n        \r\n        <NewName \r\n          newName = {newName}\r\n          setNewName = {setNewName}\r\n          newNumber = {newNumber}\r\n          setNewNumber = {setNewNumber}\r\n          handleSend = {handleSend}\r\n        /> \r\n        \r\n        <DisplayContacts \r\n          persons= {persons}\r\n          newSearch= {newSearch}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default App"]},"metadata":{},"sourceType":"module"}