{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part2\\\\course_contents\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Course = ({\n  course\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(Header, {\n    name: course.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), React.createElement(Content, {\n    parts: course.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(Sum, {\n    parts: course.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n}; //Header of the course\n\n\nconst Header = ({\n  name\n}) => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \" \", name, \" \"); //Content renders all of the parts of the course\n\n\nconst Content = ({\n  parts\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, parts.map(part => React.createElement(Part, {\n    key: part.id,\n    name: part.name,\n    exercises: part.exercises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n}; //Part renders each part of the course\n\n\nconst Part = ({\n  name,\n  exercises\n}) => React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, name, \" \", exercises); //Sum displays the total number of exercises using reduce\n\n\nconst Sum = props => {\n  const total = props.parts.reduce((sum, part) => sum + part.exercises, 0);\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Total of \", total, \" exercises\"));\n};\n\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, courses.map(course => React.createElement(Course, {\n    key: shortid.generate(),\n    course: course,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part2/course_contents/src/index.js"],"names":["React","ReactDOM","Course","course","name","parts","Header","Content","map","part","id","exercises","Part","Sum","props","total","reduce","sum","App","courses","shortid","generate","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Course = ({course}) =>{\n    return(\n        <div>\n            <Header name={course.name}/>\n            <Content parts={course.parts}/>\n            <Sum parts={course.parts}/>\n        </div>\n    )\n}\n\n//Header of the course\nconst Header = ({name}) => <h1> {name} </h1>\n\n//Content renders all of the parts of the course\nconst Content = ({parts}) => {\n    return(\n        <div>\n            {parts.map((part)=> \n                <Part \n                    key={part.id} \n                    name={part.name} \n                    exercises={part.exercises}\n                />)\n            }\n        </div>\n    )\n}\n\n//Part renders each part of the course\nconst Part = ({name,exercises}) => <p>{name} {exercises}</p>\n\n//Sum displays the total number of exercises using reduce\nconst Sum = (props) =>{\n    const total = props.parts.reduce((sum, part) => sum + part.exercises, 0)\n    return(\n        <p>\n            <b>Total of {total} exercises</b>\n        </p>\n    )\n}\n\nconst App = () => {\n    const courses = [\n        {\n          name: 'Half Stack application development',\n          id: 1,\n          parts: [\n            {\n              name: 'Fundamentals of React',\n              exercises: 10,\n              id: 1\n            },\n            {\n              name: 'Using props to pass data',\n              exercises: 7,\n              id: 2\n            },\n            {\n              name: 'State of a component',\n              exercises: 14,\n              id: 3\n            },\n            {\n              name: 'Redux',\n              exercises: 11,\n              id: 4\n            }\n          ]\n        }, \n        {\n          name: 'Node.js',\n          id: 2,\n          parts: [\n            {\n              name: 'Routing',\n              exercises: 3,\n              id: 1\n            },\n            {\n              name: 'Middlewares',\n              exercises: 7,\n              id: 2\n            }\n          ]\n        }\n      ]\n  \n    return (\n      <div>\n          {courses.map((course) => <Course key={shortid.generate()} course={course}/>)}\n      </div>\n    )\n  }\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}