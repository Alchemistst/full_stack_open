{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part2\\\\data_for_countries\\\\src\\\\components\\\\CountryInfo.js\";\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\n\nconst CountryInfo = ({\n  country,\n  weather,\n  setWeather\n}) => {\n  const parsedName = country.capital.replace(' ', '%20');\n  useEffect(() => {\n    axios.get(\"http://api.weatherstack.com/current?access_key=2de2385f5a2a84eefb93047160eeabbc&query=\" + parsedName).then(res => {\n      setWeather(res.data);\n    });\n  }, [parsedName, setWeather]);\n  let renderWeather = [];\n\n  if (weather !== []) {\n    renderWeather = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Weather in \", country.capital), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Temperature: \"), weather.current.temperature, \" Celsius\", React.createElement(\"img\", {\n      src: weather.current.weather_icons[0],\n      alt: weather.current.weather_descriptions[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Wind: \"), \" \", weather.current.wind_speed, \" Km/h direction \", weather.current.wind_dir);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, country.name), \"Capital: \", country.capital, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \"Population: \", country.population, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Laguages\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, country.languages.map(lang => React.createElement(\"li\", {\n    key: lang.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, lang.name))), React.createElement(\"img\", {\n    src: country.flag,\n    alt: country.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), renderWeather);\n};\n\nexport default CountryInfo;","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part2/data_for_countries/src/components/CountryInfo.js"],"names":["React","useEffect","axios","CountryInfo","country","weather","setWeather","parsedName","capital","replace","get","then","res","data","renderWeather","current","temperature","weather_icons","weather_descriptions","wind_speed","wind_dir","name","population","languages","map","lang","flag"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AACnD,QAAMC,UAAU,GAAGH,OAAO,CAACI,OAAR,CAAgBC,OAAhB,CAAwB,GAAxB,EAA6B,KAA7B,CAAnB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACAQ,GADL,CACS,2FAAyFH,UADlG,EAEKI,IAFL,CAEUC,GAAG,IAAI;AAACN,MAAAA,UAAU,CAACM,GAAG,CAACC,IAAL,CAAV;AAAqB,KAFvC;AAGC,GAJI,EAKJ,CAACN,UAAD,EAAaD,UAAb,CALI,CAAT;AAOA,MAAIQ,aAAa,GAAG,EAApB;;AAEA,MAAIT,OAAO,KAAK,EAAhB,EAAmB;AACfS,IAAAA,aAAa,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgBV,OAAO,CAACI,OAAxB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAEyBH,OAAO,CAACU,OAAR,CAAgBC,WAFzC,cAGI;AAAK,MAAA,GAAG,EAAEX,OAAO,CAACU,OAAR,CAAgBE,aAAhB,CAA8B,CAA9B,CAAV;AAA4C,MAAA,GAAG,EAAEZ,OAAO,CAACU,OAAR,CAAgBG,oBAAhB,CAAqC,CAArC,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,OAImBb,OAAO,CAACU,OAAR,CAAgBI,UAJnC,sBAI+Dd,OAAO,CAACU,OAAR,CAAgBK,QAJ/E,CADA;AAOH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,OAAO,CAACiB,IAAb,CAFJ,eAGcjB,OAAO,CAACI,OAHtB,OAG+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH/B,kBAIiBJ,OAAO,CAACkB,UAJzB,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,OAAO,CAACmB,SAAR,CAAkBC,GAAlB,CACGC,IAAI,IAAI;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACJ,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBI,IAAI,CAACJ,IAA1B,CADX,CADL,CAPJ,EAYI;AAAK,IAAA,GAAG,EAAEjB,OAAO,CAACsB,IAAlB;AAAwB,IAAA,GAAG,EAAEtB,OAAO,CAACiB,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAaKP,aAbL,CADJ;AAkBH,CAvCD;;AAyCA,eAAeX,WAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst CountryInfo = ({country, weather, setWeather}) =>{\r\n    const parsedName = country.capital.replace(' ', '%20')\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://api.weatherstack.com/current?access_key=2de2385f5a2a84eefb93047160eeabbc&query=\"+parsedName)\r\n            .then(res => {setWeather(res.data)})\r\n        }\r\n        ,[parsedName, setWeather])\r\n    \r\n    let renderWeather = []\r\n\r\n    if (weather !== []){\r\n        renderWeather = \r\n        <div>\r\n            <h2>Weather in {country.capital}</h2>\r\n            <b>Temperature: </b>{weather.current.temperature} Celsius\r\n            <img src={weather.current.weather_icons[0]} alt={weather.current.weather_descriptions[0]}/>\r\n            <b>Wind: </b> {weather.current.wind_speed} Km/h direction {weather.current.wind_dir}\r\n        </div>\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <h1>{country.name}</h1>\r\n            Capital: {country.capital} <br/>\r\n            Population: {country.population}\r\n            \r\n            <h2>Laguages</h2>\r\n            <ul>\r\n                {country.languages.map(\r\n                    lang => <li key={lang.name}>{lang.name}</li>\r\n                )}\r\n            </ul>\r\n            <img src={country.flag} alt={country.name}/>\r\n            {renderWeather}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default CountryInfo"]},"metadata":{},"sourceType":"module"}