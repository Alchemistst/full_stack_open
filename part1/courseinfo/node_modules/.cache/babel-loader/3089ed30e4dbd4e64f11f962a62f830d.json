{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part1\\\\courseinfo\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  //Main data\n  const course = 'Half Stack application development';\n  const part1 = 'Fundamentals of React';\n  const exercises1 = 10;\n  const part2 = 'Using props to pass data';\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14; //Component for Header section. Info is passed as props.\n\n  const Header = props => React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.course); //Component for Part. Each part is passed as props the info that needs to be rendered\n\n\n  const Part = props => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, props.name, \" \", props.exercises);\n  }; //Component for Content. Content renders all the Part components.\n\n\n  const Content = props => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Part, {\n    name: props.part1,\n    exercises: props.exercises1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Part, {\n    name: props.part2,\n    exercises: props.exercises2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Part, {\n    name: props.part3,\n    exercises: props.exercises3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })); //Component for Total.\n\n\n  const Total = props => React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Number of exercises \", props.total); //Note that the way props are used may not be the most efficient. The purpose of this exercise was to\n  //pass all data as propr. And so has been done.\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Header, {\n    course: course,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Content, {\n    part1: part1,\n    exercises1: exercises1,\n    part2: part2,\n    exercises2: exercises2,\n    part3: part3,\n    exercises3: exercises3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Total, {\n    total: exercises1 + exercises2 + exercises3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part1/courseinfo/src/index.js"],"names":["React","ReactDOM","App","course","part1","exercises1","part2","exercises2","part3","exercises3","Header","props","Part","name","exercises","Content","Total","total","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAMC,MAAM,GAAG,oCAAf;AACA,QAAMC,KAAK,GAAG,uBAAd;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,KAAK,GAAG,0BAAd;AACA,QAAMC,UAAU,GAAG,CAAnB;AACA,QAAMC,KAAK,GAAG,sBAAd;AACA,QAAMC,UAAU,GAAG,EAAnB,CARgB,CAUhB;;AACA,QAAMC,MAAM,GAAIC,KAAD,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACR,MAAX,CADN,CAXgB,CAehB;;;AACA,QAAMS,IAAI,GAAID,KAAD,IAAW;AACpB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,CAACE,IADX,OACkBF,KAAK,CAACG,SADxB,CADF;AAKH,GAND,CAhBgB,CAwBhB;;;AACA,QAAMC,OAAO,GAAIJ,KAAD,IACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,KAAK,CAACP,KAAlB;AAAyB,IAAA,SAAS,EAAEO,KAAK,CAACN,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,EAEM,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEM,KAAK,CAACL,KAAlB;AAAyB,IAAA,SAAS,EAAEK,KAAK,CAACJ,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,EAGM,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEI,KAAK,CAACH,KAAlB;AAAyB,IAAA,SAAS,EAAEG,KAAK,CAACF,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,CADJ,CAzBgB,CAiChB;;;AACA,QAAMO,KAAK,GAAIL,KAAD,IACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBA,KAAK,CAACM,KAA9B,CADN,CAlCgB,CAsChB;AACA;;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAId,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAIC,KADX;AAEE,IAAA,UAAU,EAAIC,UAFhB;AAGE,IAAA,KAAK,EAAIC,KAHX;AAIE,IAAA,UAAU,EAAIC,UAJhB;AAKE,IAAA,KAAK,EAAIC,KALX;AAME,IAAA,UAAU,EAAIC,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIJ,UAAU,GAAGE,UAAb,GAA0BE,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAtDD;;AAwDAR,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  //Main data\n  const course = 'Half Stack application development'\n  const part1 = 'Fundamentals of React'\n  const exercises1 = 10\n  const part2 = 'Using props to pass data'\n  const exercises2 = 7\n  const part3 = 'State of a component'\n  const exercises3 = 14\n  \n  //Component for Header section. Info is passed as props.\n  const Header = (props) => (\n        <h1>{props.course}</h1>\n  )\n\n  //Component for Part. Each part is passed as props the info that needs to be rendered\n  const Part = (props) => {\n      return(\n        <div>\n            {props.name} {props.exercises}\n        </div>\n      )\n  }\n\n  //Component for Content. Content renders all the Part components.\n  const Content = (props) => (\n      <div>\n            <Part name={props.part1} exercises={props.exercises1} />\n            <Part name={props.part2} exercises={props.exercises2} />\n            <Part name={props.part3} exercises={props.exercises3} />\n      </div>\n  )\n\n  //Component for Total.\n  const Total = (props) =>(\n        <p>Number of exercises {props.total}</p>\n  )\n\n  //Note that the way props are used may not be the most efficient. The purpose of this exercise was to\n  //pass all data as propr. And so has been done.\n  return (\n    <div>\n      <Header course = {course}/>\n      <Content\n        part1 = {part1}\n        exercises1 = {exercises1}\n        part2 = {part2}\n        exercises2 = {exercises2}\n        part3 = {part3}\n        exercises3 = {exercises3}\n      />\n      <Total total = {exercises1 + exercises2 + exercises3} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}