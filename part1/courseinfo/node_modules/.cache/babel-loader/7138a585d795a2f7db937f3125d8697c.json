{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part1\\\\courseinfo\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //Component for Header section. Info is passed as props.\n\nconst Header = props => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, props.course); //Component for Part. Each part is passed as props the info that needs to be rendered from Content.\n\n\nconst Part = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.name, \" \", props.exercises);\n}; //Component for Content. Content renders all the Part components. Content gets all data passed as props.\n\n\nconst Content = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(Part, {\n  name: props.parts[0].name,\n  exercises: props.parts[0].exercises,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(Part, {\n  name: props.parts[1].name,\n  exercises: props.parts[1].exercises,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), React.createElement(Part, {\n  name: props.parts[2].name,\n  exercises: props.parts[2].exercises,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n})); //Component for Total.\n\n\nconst Total = props => {\n  let total = 0;\n  props.parts.forEach(part => {\n    total += part.exercises;\n  });\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Number of exercises \", total);\n};\n\nconst App = () => {\n  //Main data as one single object\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Header, {\n    course: course.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Content, {\n    parts: course.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Total, {\n    parts: course.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part1/courseinfo/src/index.js"],"names":["React","ReactDOM","Header","props","course","Part","name","exercises","Content","parts","Total","total","forEach","part","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEC;;AACA,MAAMC,MAAM,GAAIC,KAAD,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,MAAX,CADD,C,CAID;;;AACA,MAAMC,IAAI,GAAIF,KAAD,IAAW;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACG,IADX,OACkBH,KAAK,CAACI,SADxB,CADF;AAKC,CAND,C,CAQA;;;AACA,MAAMC,OAAO,GAAIL,KAAD,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACM,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAEA,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAeH,IAA3B;AAAiC,EAAA,SAAS,EAAEH,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAeF,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADN,EAEM,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAEJ,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAeH,IAA3B;AAAiC,EAAA,SAAS,EAAEH,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAeF,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFN,EAGM,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAEJ,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAeH,IAA3B;AAAiC,EAAA,SAAS,EAAEH,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAeF,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHN,CADA,C,CAQA;;;AACA,MAAMG,KAAK,GAAIP,KAAD,IAAU;AACxB,MAAIQ,KAAK,GAAG,CAAZ;AACAR,EAAAA,KAAK,CAACM,KAAN,CAAYG,OAAZ,CAAoBC,IAAI,IAAI;AAC1BF,IAAAA,KAAK,IAAIE,IAAI,CAACN,SAAd;AACD,GAFD;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBI,KAAxB,CADF;AAEE,CAPF;;AAUA,MAAMG,GAAG,GAAG,MAAM;AAChB;AACA,QAAMV,MAAM,GAAG;AACbE,IAAAA,IAAI,EAAE,oCADO;AAEbG,IAAAA,KAAK,EAAE,CACL;AACEH,MAAAA,IAAI,EAAE,uBADR;AAEEC,MAAAA,SAAS,EAAE;AAFb,KADK,EAKL;AACED,MAAAA,IAAI,EAAE,0BADR;AAEEC,MAAAA,SAAS,EAAE;AAFb,KALK,EASL;AACED,MAAAA,IAAI,EAAE,sBADR;AAEEC,MAAAA,SAAS,EAAE;AAFb,KATK;AAFM,GAAf;AAkBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAIH,MAAM,CAACE,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAIF,MAAM,CAACK,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIL,MAAM,CAACK,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA3BD;;AA6BAR,QAAQ,CAACc,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n //Component for Header section. Info is passed as props.\n const Header = (props) => (\n  <h1>{props.course}</h1>\n)\n\n//Component for Part. Each part is passed as props the info that needs to be rendered from Content.\nconst Part = (props) => {\nreturn(\n  <div>\n      {props.name} {props.exercises}\n  </div>\n)\n}\n\n//Component for Content. Content renders all the Part components. Content gets all data passed as props.\nconst Content = (props) => (\n<div>\n      <Part name={props.parts[0].name} exercises={props.parts[0].exercises} />\n      <Part name={props.parts[1].name} exercises={props.parts[1].exercises} />\n      <Part name={props.parts[2].name} exercises={props.parts[2].exercises} />\n</div>\n)\n\n//Component for Total.\nconst Total = (props) =>{\nlet total = 0\nprops.parts.forEach(part => {\n  total += part.exercises\n})\nreturn(\n  <p>Number of exercises {total}</p>\n)}\n\n\nconst App = () => {\n  //Main data as one single object\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n  \n  return (\n    <div>\n      <Header course = {course.name}/>\n      <Content parts = {course.parts} />\n      <Total parts = {course.parts} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}