{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part1\\\\courseinfo\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  //Main data as one single object\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  }; //Component for Header section. Info is passed as props.\n\n  const Header = props => React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.course); //Component for Part. Each part is passed as props the info that needs to be rendered from Content.\n\n\n  const Part = props => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, props.name, \" \", props.exercises);\n  }; //Component for Content. Content renders all the Part components. Content gets all data passed as props.\n\n\n  const Content = props => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Part, {\n    name: props.parts[0].name,\n    exercises: props.parts[0].exercises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Part, {\n    name: props.parts[1].name,\n    exercises: props.parts[1].exercises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Part, {\n    name: props.parts[2].name,\n    exercises: props.parts[2].exercises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })); //Component for Total.\n\n\n  const Total = props => {\n    let total = 0;\n    props.parts.forEach(part => {\n      total += part.exercises;\n    });\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Number of exercises \", total);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Header, {\n    course: course.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Content, {\n    parts: course.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Total, {\n    parts: course.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part1/courseinfo/src/index.js"],"names":["React","ReactDOM","App","course","name","parts","exercises","Header","props","Part","Content","Total","total","forEach","part","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,oCADO;AAEbC,IAAAA,KAAK,EAAE,CACL;AACED,MAAAA,IAAI,EAAE,uBADR;AAEEE,MAAAA,SAAS,EAAE;AAFb,KADK,EAKL;AACEF,MAAAA,IAAI,EAAE,0BADR;AAEEE,MAAAA,SAAS,EAAE;AAFb,KALK,EASL;AACEF,MAAAA,IAAI,EAAE,sBADR;AAEEE,MAAAA,SAAS,EAAE;AAFb,KATK;AAFM,GAAf,CAFgB,CAoBhB;;AACA,QAAMC,MAAM,GAAIC,KAAD,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACL,MAAX,CADN,CArBgB,CAyBhB;;;AACA,QAAMM,IAAI,GAAID,KAAD,IAAW;AACpB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,CAACJ,IADX,OACkBI,KAAK,CAACF,SADxB,CADF;AAKH,GAND,CA1BgB,CAkChB;;;AACA,QAAMI,OAAO,GAAIF,KAAD,IACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,KAAK,CAACH,KAAN,CAAY,CAAZ,EAAeD,IAA3B;AAAiC,IAAA,SAAS,EAAEI,KAAK,CAACH,KAAN,CAAY,CAAZ,EAAeC,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,EAEM,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEE,KAAK,CAACH,KAAN,CAAY,CAAZ,EAAeD,IAA3B;AAAiC,IAAA,SAAS,EAAEI,KAAK,CAACH,KAAN,CAAY,CAAZ,EAAeC,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,EAGM,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEE,KAAK,CAACH,KAAN,CAAY,CAAZ,EAAeD,IAA3B;AAAiC,IAAA,SAAS,EAAEI,KAAK,CAACH,KAAN,CAAY,CAAZ,EAAeC,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,CADJ,CAnCgB,CA2ChB;;;AACA,QAAMK,KAAK,GAAIH,KAAD,IAAU;AACtB,QAAII,KAAK,GAAG,CAAZ;AACAJ,IAAAA,KAAK,CAACH,KAAN,CAAYQ,OAAZ,CAAoBC,IAAI,IAAI;AACxBF,MAAAA,KAAK,IAAIE,IAAI,CAACR,SAAd;AACH,KAFD;AAGA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAwBM,KAAxB,CADJ;AAEA,GAPF;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAIT,MAAM,CAACC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAID,MAAM,CAACE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIF,MAAM,CAACE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA7DD;;AA+DAJ,QAAQ,CAACc,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  //Main data as one single object\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n  \n  //Component for Header section. Info is passed as props.\n  const Header = (props) => (\n        <h1>{props.course}</h1>\n  )\n\n  //Component for Part. Each part is passed as props the info that needs to be rendered from Content.\n  const Part = (props) => {\n      return(\n        <div>\n            {props.name} {props.exercises}\n        </div>\n      )\n  }\n\n  //Component for Content. Content renders all the Part components. Content gets all data passed as props.\n  const Content = (props) => (\n      <div>\n            <Part name={props.parts[0].name} exercises={props.parts[0].exercises} />\n            <Part name={props.parts[1].name} exercises={props.parts[1].exercises} />\n            <Part name={props.parts[2].name} exercises={props.parts[2].exercises} />\n      </div>\n  )\n\n  //Component for Total.\n  const Total = (props) =>{\n    let total = 0\n    props.parts.forEach(part => {\n        total += part.exercises\n    })\n    return(\n        <p>Number of exercises {total}</p>\n  )}\n\n  \n  return (\n    <div>\n      <Header course = {course.name}/>\n      <Content parts = {course.parts} />\n      <Total parts = {course.parts} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}