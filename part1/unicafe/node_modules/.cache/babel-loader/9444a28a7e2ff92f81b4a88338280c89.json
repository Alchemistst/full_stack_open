{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => {\n  //Generic button definition. Button displays name and adds score accordingly\n  return React.createElement(\"button\", {\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.name);\n};\n\nconst Score = props => {\n  //Generic Score component definition for displaying feedback\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, (props.name, ' ', props.score));\n};\n\nconst Statistics = () => {\n  //Display information from Feedback\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(Score, {\n    name: \"Good\",\n    score: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Score, {\n    name: \"Neutral\",\n    score: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Score, {\n    name: \"Bad\",\n    score: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nconst App = () => {\n  // Save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Give feedback\"), React.createElement(Button, {\n    name: \"Good\",\n    onClick: () => setGood(good + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Neutral\",\n    onClick: () => setGood(neutral + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Bad\",\n    onClick: () => setGood(bad + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Statistics, {\n    good: [good, setGood],\n    neutral: [neutral, setNeutral],\n    bad: [bad, setBad],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","onClick","name","Score","score","Statistics","App","good","setGood","neutral","setNeutral","bad","setBad","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAU;AACrB;AACA,SACI;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,KAAK,CAACE,IAAvC,CADJ;AAGH,CALD;;AAOA,MAAMC,KAAK,GAAIH,KAAD,IAAU;AACpB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAMA,KAAK,CAACE,IAAN,EAAW,GAAX,EAAeF,KAAK,CAACI,KAA3B,EADJ;AAGH,CALD;;AAOA,MAAMC,UAAU,GAAG,MAAK;AACpB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,KAAK,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAVD;;AAaA,MAAMC,GAAG,GAAG,MAAM;AACd;AADc,oBAEUT,QAAQ,CAAC,CAAD,CAFlB;AAAA;AAAA,QAEPU,IAFO;AAAA,QAEDC,OAFC;;AAAA,qBAGgBX,QAAQ,CAAC,CAAD,CAHxB;AAAA;AAAA,QAGPY,OAHO;AAAA,QAGEC,UAHF;;AAAA,qBAIQb,QAAQ,CAAC,CAAD,CAJhB;AAAA;AAAA,QAIPc,GAJO;AAAA,QAIFC,MAJE;;AAMd,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAE,MAAMJ,OAAO,CAACD,IAAI,GAAG,CAAR,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,OAAO,GAAG,CAAX,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAmB,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACG,GAAG,GAAG,CAAP,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAOG,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,CAACJ,IAAD,EAAOC,OAAP,CAAlB;AAAmC,IAAA,OAAO,EAAE,CAACC,OAAD,EAAUC,UAAV,CAA5C;AAAmE,IAAA,GAAG,EAAE,CAACC,GAAD,EAAMC,MAAN,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,CADJ;AAWH,CAjBD;;AAmBAd,QAAQ,CAACe,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADJ","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) =>{\n    //Generic button definition. Button displays name and adds score accordingly\n    return(\n        <button onClick={props.onClick}>{props.name}</button>\n    )\n}\n\nconst Score = (props) =>{\n    //Generic Score component definition for displaying feedback\n    return(\n        <div>{props.name,' ',props.score}</div>\n    )\n}\n\nconst Statistics = () =>{\n    //Display information from Feedback\n    return(\n        <div>\n            <h1>Statistics</h1>\n            <Score name=\"Good\" score=\"0\" />\n            <Score name=\"Neutral\" score=\"0\" />\n            <Score name=\"Bad\" score=\"0\" />\n        </div>\n    )\n}\n\n\nconst App = () => {\n    // Save clicks of each button to own state\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n\n    return(\n        <div>\n            <div>\n                <h1>Give feedback</h1>\n                <Button name=\"Good\" onClick={() => setGood(good + 1)} />\n                <Button name=\"Neutral\" onClick={() => setGood(neutral + 1)}/>\n                <Button name=\"Bad\" onClick={() => setGood(bad + 1)}/>\n            </div>\n           <Statistics good={[good, setGood]} neutral={[neutral, setNeutral]} bad={[bad, setBad]} />\n        </div>\n    )\n}\n\nReactDOM.render(<App />,\n    document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}