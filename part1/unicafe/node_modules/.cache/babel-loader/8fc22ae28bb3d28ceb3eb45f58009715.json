{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Javi\\\\Documents\\\\GitHub\\\\full_stack_open\\\\part1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => {\n  //generic button definition\n  return React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.name);\n};\n\nconst Feedback = props => {\n  //Feedback component containing title and buttons\n  console.log(props.good[0]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Give feedback\"), React.createElement(Button, {\n    name: \"Good\",\n    actualscore: props.good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Neutral\",\n    state: props.neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Bad\",\n    state: props.bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nconst Score = props => {\n  //Generic Score component definition for displaying feedback\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, (props.name, ' ', props.score));\n};\n\nconst Statistics = () => {\n  //Display information from Feedback\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(Score, {\n    name: \"Good\",\n    score: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Score, {\n    name: \"Neutral\",\n    score: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Score, {\n    name: \"Bad\",\n    score: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nconst App = () => {\n  // Save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Feedback, {\n    good: [good, setGood],\n    neutral: [neutral, setNeutral],\n    bad: [bad, setBad],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    good: [good, setGood],\n    neutral: [neutral, setNeutral],\n    bad: [bad, setBad],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Javi/Documents/GitHub/full_stack_open/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","name","Feedback","console","log","good","neutral","bad","Score","score","Statistics","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAU;AACrB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,KAAK,CAACC,IAAf,CADJ;AAGH,CALD;;AAOA,MAAMC,QAAQ,GAAIF,KAAD,IAAU;AACvB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,IAAN,CAAW,CAAX,CAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,WAAW,EAAEL,KAAK,CAACK,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAEL,KAAK,CAACM,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAmB,IAAA,KAAK,EAAEN,KAAK,CAACO,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AASH,CAZD;;AAcA,MAAMC,KAAK,GAAIR,KAAD,IAAU;AACpB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAMA,KAAK,CAACC,IAAN,EAAW,GAAX,EAAeD,KAAK,CAACS,KAA3B,EADJ;AAGH,CALD;;AAOA,MAAMC,UAAU,GAAG,MAAK;AACpB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,KAAK,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAVD;;AAaA,MAAMC,GAAG,GAAG,MAAM;AACd;AADc,oBAEUd,QAAQ,CAAC,CAAD,CAFlB;AAAA;AAAA,QAEPQ,IAFO;AAAA,QAEDO,OAFC;;AAAA,qBAGgBf,QAAQ,CAAC,CAAD,CAHxB;AAAA;AAAA,QAGPS,OAHO;AAAA,QAGEO,UAHF;;AAAA,qBAIQhB,QAAQ,CAAC,CAAD,CAJhB;AAAA;AAAA,QAIPU,GAJO;AAAA,QAIFO,MAJE;;AAMd,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAACT,IAAD,EAAOO,OAAP,CAAhB;AAAiC,IAAA,OAAO,EAAE,CAACN,OAAD,EAAUO,UAAV,CAA1C;AAAiE,IAAA,GAAG,EAAE,CAACN,GAAD,EAAMO,MAAN,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEG,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,CAACT,IAAD,EAAOO,OAAP,CAAlB;AAAmC,IAAA,OAAO,EAAE,CAACN,OAAD,EAAUO,UAAV,CAA5C;AAAmE,IAAA,GAAG,EAAE,CAACN,GAAD,EAAMO,MAAN,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADJ;AAMH,CAZD;;AAcAhB,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADJ","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) =>{\n    //generic button definition\n    return(\n        <button>{props.name}</button>\n    )\n}\n\nconst Feedback = (props) =>{\n    //Feedback component containing title and buttons\n    console.log(props.good[0])\n    return(\n        <div>\n            <h1>Give feedback</h1>\n            <Button name=\"Good\" actualscore={props.good}/>\n            <Button name=\"Neutral\" state={props.neutral}/>\n            <Button name=\"Bad\" state={props.bad}/>\n        </div>\n    )\n\n}\n\nconst Score = (props) =>{\n    //Generic Score component definition for displaying feedback\n    return(\n        <div>{props.name,' ',props.score}</div>\n    )\n}\n\nconst Statistics = () =>{\n    //Display information from Feedback\n    return(\n        <div>\n            <h1>Statistics</h1>\n            <Score name=\"Good\" score=\"0\" />\n            <Score name=\"Neutral\" score=\"0\" />\n            <Score name=\"Bad\" score=\"0\" />\n        </div>\n    )\n}\n\n\nconst App = () => {\n    // Save clicks of each button to own state\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n\n    return(\n        <div>\n           <Feedback good={[good, setGood]} neutral={[neutral, setNeutral]} bad={[bad, setBad]} />\n           <Statistics good={[good, setGood]} neutral={[neutral, setNeutral]} bad={[bad, setBad]} />\n        </div>\n    )\n}\n\nReactDOM.render(<App />,\n    document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}